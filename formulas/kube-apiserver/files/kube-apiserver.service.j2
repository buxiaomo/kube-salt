{%- set authorization_mode = salt['pillar.get']('kube-apiserver:authorization_modes') -%}
{%- set enable_admission_plugins = salt['pillar.get']('kube-apiserver:enable_admission_plugins') -%}
{%- set bind_address = salt['pillar.get']('kube-apiserver:bind') %}
{%- set kubelet_preferred_address_types = salt['pillar.get']('kube-apiserver:kubelet_preferred_address_types') -%}
{%- set service_cluster_ip_range = salt['pillar.get']('kubernetes:SvcCIDR') -%}
{%- set service_node_port_range = salt['pillar.get']('kubernetes:NodePortRange') -%}
{%- set loglevel = salt['pillar.get']('kube-apiserver:log:logLevel') -%}
{%- set tls_cipher_suites = salt['pillar.get']('kube-apiserver:tls_cipher_suites') -%}
{%- set advertise_address = salt['grains.get']('saltstack_default_ipv4') -%}

{% set etcd_cluster_ep = [] -%}
{% for server, addr in salt['mine.get']('roles:kube-etcd', 'network.ip_addrs', tgt_type='grain').items() -%}
{% if etcd_cluster_ep.append("https://" + addr[0] + ":2379") -%}
{% endif -%}
{% endfor -%}
[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-apiserver \
  --service-account-issuer=api \
  --api-audiences=api \
  --service-account-signing-key-file=/etc/kubernetes/pki/ca.key \
  --authorization-mode={{ authorization_mode | join(',') }} \
  --enable-admission-plugins={{ enable_admission_plugins | join(',') }} \
  --tls-cipher-suites={{ tls_cipher_suites | join(',') }} \
  --advertise-address={{ advertise_address }} \
  --bind-address={{ bind_address }} \
  --secure-port=6443 \
  --insecure-port=0 \
  --anonymous-auth=false \
  --allow-privileged=true \
  --audit-log-path=/var/log/audit.log \
  --audit-policy-file=/etc/kubernetes/audit-policy-minimal.yaml \
  --audit-log-format=json \
  --audit-log-maxage=1 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=200 \
  --service-account-lookup=true \
  --storage-backend=etcd3 \
  --etcd-cafile=/etc/kubernetes/pki/ca.crt \
  --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt \
  --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key \
  --etcd-servers={{ etcd_cluster_ep | join(',') }} \
  --event-ttl=4h \
  --experimental-encryption-provider-config=/etc/kubernetes/encryption-config.yaml \
  --enable-bootstrap-token-auth \
  --client-ca-file=/etc/kubernetes/pki/ca.crt \
  --kubelet-https \
  --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt \
  --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key \
  --kubelet-preferred-address-types={{ kubelet_preferred_address_types | join(',') }} \
  --runtime-config=api/all=true \
  --service-cluster-ip-range={{ service_cluster_ip_range }} \
  --service-node-port-range={{ service_node_port_range }} \
  --service-account-key-file=/etc/kubernetes/pki/ca.key \
  --tls-cert-file=/etc/kubernetes/pki/apiserver.crt \
  --tls-private-key-file=/etc/kubernetes/pki/apiserver.key \
  --requestheader-client-ca-file=/etc/kubernetes/pki/ca.crt \
  --requestheader-username-headers=X-Remote-User \
  --requestheader-group-headers=X-Remote-Group \
  --requestheader-allowed-names=front-proxy-client \
  --requestheader-extra-headers-prefix=X-Remote-Extra- \
  --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt \
  --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key \
  --profiling=false \
  --v={{ loglevel }}

Restart=on-failure
RestartSec=5
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
